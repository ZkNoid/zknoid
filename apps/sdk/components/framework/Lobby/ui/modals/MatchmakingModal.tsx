import BaseModal from "@sdk/components/shared/Modal/BaseModal";
import Button from "@sdk/components/shared/Button";
import LoadSpinner from "@sdk/components/shared/LoadSpinner";
import Image from "next/image";
import znakesImg from "@sdk/public/image/tokens/znakes.svg";
import { Currency } from "@sdk/constants/currency";
import { formatUnits } from "@sdk/lib/unit";

export const MatchmakingModal = ({
  isLongSearch,
  isOpen,
  pay,
  receive,
  blockNumber,
  setIsOpen,
  leave,
}: {
  isLongSearch?: boolean;
  isOpen: boolean;
  pay: number;
  receive: number;
  blockNumber: number;
  setIsOpen: (isOpen: boolean) => void;
  leave: () => Promise<void>;
}) => {
  return (
    <BaseModal isOpen={isOpen} setIsOpen={setIsOpen} isDismissible={false}>
      <div className={"flex flex-col items-center justify-center gap-4"}>
        <span
          className={"text-headline-2 font-medium uppercase text-left-accent"}
        >
          Matchmaking in process!
        </span>
        <div
          className={
            "flex flex-row gap-2 font-plexsans text-[16px]/[16px] font-medium text-foreground"
          }
        >
          <svg
            width="20"
            height="20"
            viewBox="0 0 20 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 18.2692L14.0346 12.3029C14.996 10.9818 15.5131 9.38962 15.5115 7.75577C15.5115 3.47933 12.0322 0 7.75577 0C3.47933 0 0 3.47933 0 7.75577C0 12.0322 3.47933 15.5115 7.75577 15.5115C9.38962 15.5131 10.9818 14.996 12.3029 14.0346L18.2692 20L20 18.2692ZM7.75577 13.062C6.70616 13.0621 5.68009 12.7509 4.80733 12.1679C3.93457 11.5848 3.25431 10.756 2.8526 9.78631C2.45089 8.81661 2.34576 7.74956 2.5505 6.72011C2.75525 5.69066 3.26067 4.74505 4.00286 4.00286C4.74505 3.26067 5.69066 2.75525 6.72011 2.5505C7.74956 2.34576 8.81661 2.45089 9.78631 2.8526C10.756 3.25431 11.5848 3.93457 12.1679 4.80733C12.7509 5.68009 13.0621 6.70616 13.062 7.75577C13.0604 9.16257 12.5008 10.5113 11.506 11.506C10.5113 12.5008 9.16257 13.0604 7.75577 13.062Z"
              fill="#F9F8F4"
            />
          </svg>
          <span>Matchmaking:</span>
          <span>{blockNumber % 20}/20</span>
        </div>
        <LoadSpinner width={50} height={50} />
        <div className={"flex flex-row gap-8"}>
          <div className={"flex flex-col gap-4"}>
            <div className={"flex flex-row gap-2"}>
              <svg
                width="23"
                height="19"
                viewBox="0 0 23 19"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M7.1881 0C6.62173 -1.19354e-08 6.0609 0.111555 5.53764 0.328297C5.01438 0.545038 4.53893 0.862721 4.13845 1.26321C3.73796 1.66369 3.42028 2.13914 3.20354 2.6624C2.9868 3.18566 2.87524 3.74649 2.87524 4.31286C2.87524 4.87923 2.9868 5.44006 3.20354 5.96332C3.42028 6.48658 3.73796 6.96203 4.13845 7.36251C4.53893 7.763 5.01438 8.08068 5.53764 8.29742C6.0609 8.51416 6.62173 8.62572 7.1881 8.62572C8.33194 8.62572 9.42893 8.17133 10.2378 7.36251C11.0466 6.55369 11.501 5.4567 11.501 4.31286C11.501 3.16902 11.0466 2.07203 10.2378 1.26321C9.42893 0.454389 8.33194 2.41047e-08 7.1881 0ZM4.31286 4.31286C4.31286 3.93528 4.38723 3.56139 4.53172 3.21255C4.67622 2.86371 4.88801 2.54675 5.155 2.27976C5.42199 2.01277 5.73895 1.80098 6.08779 1.65648C6.43663 1.51199 6.81052 1.43762 7.1881 1.43762C7.56568 1.43762 7.93957 1.51199 8.28841 1.65648C8.63725 1.80098 8.95421 2.01277 9.2212 2.27976C9.48819 2.54675 9.69998 2.86371 9.84447 3.21255C9.98897 3.56139 10.0633 3.93528 10.0633 4.31286C10.0633 5.07542 9.76041 5.80675 9.2212 6.34596C8.68199 6.88517 7.95066 7.1881 7.1881 7.1881C6.42554 7.1881 5.69421 6.88517 5.155 6.34596C4.61579 5.80675 4.31286 5.07542 4.31286 4.31286ZM17.2514 1.91683C16.3618 1.91683 15.5086 2.27024 14.8795 2.89932C14.2504 3.5284 13.897 4.38162 13.897 5.27127C13.897 6.16093 14.2504 7.01414 14.8795 7.64322C15.5086 8.2723 16.3618 8.62572 17.2514 8.62572C18.1411 8.62572 18.9943 8.2723 19.6234 7.64322C20.2525 7.01414 20.6059 6.16093 20.6059 5.27127C20.6059 4.38162 20.2525 3.5284 19.6234 2.89932C18.9943 2.27024 18.1411 1.91683 17.2514 1.91683ZM15.3346 5.27127C15.3346 4.7629 15.5366 4.27535 15.896 3.91587C16.2555 3.5564 16.7431 3.35445 17.2514 3.35445C17.7598 3.35445 18.2474 3.5564 18.6068 3.91587C18.9663 4.27535 19.1683 4.7629 19.1683 5.27127C19.1683 5.77965 18.9663 6.2672 18.6068 6.62667C18.2474 6.98615 17.7598 7.1881 17.2514 7.1881C16.7431 7.1881 16.2555 6.98615 15.896 6.62667C15.5366 6.2672 15.3346 5.77965 15.3346 5.27127ZM0 12.699C0 12.1271 0.227195 11.5786 0.631604 11.1741C1.03601 10.7697 1.58451 10.5425 2.15643 10.5425H12.2198C12.7917 10.5425 13.3402 10.7697 13.7446 11.1741C14.149 11.5786 14.3762 12.1271 14.3762 12.699V13.2079C14.375 13.2854 14.3695 13.3629 14.3599 13.4398C14.3383 13.6375 14.3031 13.8335 14.2545 14.0264C14.096 14.6557 13.8135 15.2471 13.4235 15.7659C12.4517 17.0626 10.5981 18.2099 7.1881 18.2099C3.77806 18.2099 1.92449 17.0626 0.952663 15.7659C0.563025 15.2471 0.280852 14.6557 0.122677 14.0264C0.0601 13.7758 0.0200071 13.5202 0.00287526 13.2625C0.00168086 13.2443 0.000722351 13.2261 0 13.2079V13.1801V12.699ZM1.43762 13.1734V13.1906L1.44625 13.2865C1.45583 13.3766 1.475 13.5117 1.51717 13.6775C1.62891 14.1208 1.82764 14.5375 2.1018 14.9033C2.74777 15.763 4.12884 16.7722 7.1881 16.7722C10.2474 16.7722 11.6284 15.763 12.2734 14.9033C12.6089 14.4567 12.7756 14.0101 12.8581 13.6775C12.8983 13.5178 12.9249 13.3549 12.9376 13.1906L12.9386 13.1734V12.699C12.9386 12.5083 12.8628 12.3255 12.728 12.1907C12.5932 12.0559 12.4104 11.9802 12.2198 11.9802H2.15643C1.96579 11.9802 1.78296 12.0559 1.64815 12.1907C1.51335 12.3255 1.43762 12.5083 1.43762 12.699V13.1734ZM14.472 15.9288C15.2129 16.156 16.1272 16.293 17.2495 16.293C19.9043 16.293 21.3879 15.5301 22.194 14.6101C22.5163 14.246 22.7551 13.8158 22.8936 13.3497C22.9483 13.1616 22.9834 12.9682 22.9981 12.7728L23 12.7277V12.699C23 12.1271 22.7728 11.5786 22.3684 11.1741C21.964 10.7697 21.4155 10.5425 20.8436 10.5425H14.4663C14.8439 10.9365 15.1199 11.43 15.2503 11.9802H20.8445C21.0335 11.9801 21.2149 12.0546 21.3494 12.1873C21.484 12.32 21.5608 12.5004 21.5633 12.6894C21.5548 12.7764 21.5382 12.8624 21.5135 12.9462C21.4333 13.2118 21.2959 13.4565 21.111 13.6631C20.6596 14.1807 19.6283 14.8554 17.2495 14.8554C16.3477 14.8554 15.6394 14.7586 15.0825 14.6091C14.9348 15.0727 14.7297 15.5161 14.472 15.9288Z"
                  fill="#D2FF00"
                />
              </svg>
              <span
                className={
                  "font-plexsans text-[14px]/[14px] font-medium uppercase"
                }
              >
                Players in queue: 0
              </span>
            </div>
            <div className={"flex flex-row gap-2"}>
              <svg
                width="20"
                height="20"
                viewBox="0 0 20 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M10 18C12.1217 18 14.1566 17.1571 15.6569 15.6569C17.1571 14.1566 18 12.1217 18 10C18 7.87827 17.1571 5.84344 15.6569 4.34315C14.1566 2.84285 12.1217 2 10 2C7.87827 2 5.84344 2.84285 4.34315 4.34315C2.84285 5.84344 2 7.87827 2 10C2 12.1217 2.84285 14.1566 4.34315 15.6569C5.84344 17.1571 7.87827 18 10 18ZM10 0C11.3132 0 12.6136 0.258658 13.8268 0.761205C15.0401 1.26375 16.1425 2.00035 17.0711 2.92893C17.9997 3.85752 18.7362 4.95991 19.2388 6.17317C19.7413 7.38642 20 8.68678 20 10C20 12.6522 18.9464 15.1957 17.0711 17.0711C15.1957 18.9464 12.6522 20 10 20C4.47 20 0 15.5 0 10C0 7.34784 1.05357 4.8043 2.92893 2.92893C4.8043 1.05357 7.34784 0 10 0ZM10.5 5V10.25L15 12.92L14.25 14.15L9 11V5H10.5Z"
                  fill="#D2FF00"
                />
              </svg>
              <span
                className={
                  "font-plexsans text-[14px]/[14px] font-medium uppercase"
                }
              >
                Average waiting time: 10 minutes
              </span>
            </div>
          </div>
          <div className={"flex flex-col gap-2"}>
            <div className={"flex flex-row gap-2"}>
              <span
                className={
                  "font-plexsans text-[14px]/[14px] font-medium uppercase text-left-accent"
                }
              >
                You Pay:
              </span>
              <Image
                src={znakesImg}
                alt={"Znakes token"}
                className={"h-[20px] w-[20px]"}
              />
              <span>
                {" "}
                {formatUnits(pay)} {Currency.ZNAKES}
              </span>
            </div>
            <div className={"flex flex-row gap-2"}>
              <span
                className={
                  "font-plexsans text-[14px]/[14px] font-medium uppercase text-left-accent"
                }
              >
                You max recive:
              </span>
              <Image
                src={znakesImg}
                alt={"Znakes token"}
                className={"h-[20px] w-[20px]"}
              />
              <span>
                {" "}
                {formatUnits(receive)} {Currency.ZNAKES}
              </span>
            </div>
          </div>
        </div>
        <div className={"flex w-full items-end justify-between"}>
          {isLongSearch ? (
            <div
              className={
                "font-plexsans text-[14px]/[14px] font-medium text-right-accent"
              }
            >
              Searching is taking too long...
            </div>
          ) : (
            <div />
          )}
          <Button
            label={"Cancel"}
            color={"tertiary"}
            className={"max-w-[20%]"}
            onClick={async () => {
              await leave();
              setIsOpen(false);
            }}
          />
        </div>
      </div>
    </BaseModal>
  );
};
